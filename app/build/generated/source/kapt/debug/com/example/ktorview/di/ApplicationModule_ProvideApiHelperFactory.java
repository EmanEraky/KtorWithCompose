// Generated by Dagger (https://dagger.dev).
package com.example.ktorview.di;

import com.example.ktorview.data.ApiService;
import com.example.ktorview.data.ApiServiceImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideApiHelperFactory implements Factory<ApiService> {
  private final ApplicationModule module;

  private final Provider<ApiServiceImpl> apiServiceProvider;

  public ApplicationModule_ProvideApiHelperFactory(ApplicationModule module,
      Provider<ApiServiceImpl> apiServiceProvider) {
    this.module = module;
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public ApiService get() {
    return provideApiHelper(module, apiServiceProvider.get());
  }

  public static ApplicationModule_ProvideApiHelperFactory create(ApplicationModule module,
      Provider<ApiServiceImpl> apiServiceProvider) {
    return new ApplicationModule_ProvideApiHelperFactory(module, apiServiceProvider);
  }

  public static ApiService provideApiHelper(ApplicationModule instance, ApiServiceImpl apiService) {
    return Preconditions.checkNotNullFromProvides(instance.provideApiHelper(apiService));
  }
}
