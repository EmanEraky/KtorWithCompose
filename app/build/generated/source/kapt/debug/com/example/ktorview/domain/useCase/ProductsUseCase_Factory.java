// Generated by Dagger (https://dagger.dev).
package com.example.ktorview.domain.useCase;

import com.example.ktorview.data.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductsUseCase_Factory implements Factory<ProductsUseCase> {
  private final Provider<ApiService> unsplashRepositoryProvider;

  public ProductsUseCase_Factory(Provider<ApiService> unsplashRepositoryProvider) {
    this.unsplashRepositoryProvider = unsplashRepositoryProvider;
  }

  @Override
  public ProductsUseCase get() {
    return newInstance(unsplashRepositoryProvider.get());
  }

  public static ProductsUseCase_Factory create(Provider<ApiService> unsplashRepositoryProvider) {
    return new ProductsUseCase_Factory(unsplashRepositoryProvider);
  }

  public static ProductsUseCase newInstance(ApiService unsplashRepository) {
    return new ProductsUseCase(unsplashRepository);
  }
}
